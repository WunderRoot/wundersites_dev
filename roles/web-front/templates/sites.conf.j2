## Silently block all undefined vhost access
server {
  listen {{ default_port }};
  server_name _;
  return 444;
}

{% for site in nginx_sites %}

## Server definition for {{ site.hostname }}
server {
  listen {{ site.port }};
  server_name {{ site.hostname }};
  root {{ site.docroot }};
  {% if site.accesslog %}
  access_log  /var/log/nginx/{{ site.logprefix }}-access.log {{ site.accesslog_params }};
  {% else %}
  access_log off;
  {% endif %}
  {% if site.errorlog %}
  error_log   /var/log/nginx/{{ site.logprefix }}-error.log;
  {% else %}
  error_log off;
  {% endif %}
  
  {% if site.redirect %}
  return 301 {{ site.redirecthost }}$request_uri;
  {% endif %}
  
  {% if site.cdn %}
  server_name_in_redirect off;
  
  if ($no_cdn) {
   return 301 $scheme://{{ site.nocdnhostname }}$request_uri;
  }
  {% endif %}
  
  limit_conn arbeit 32;
  
  {% if site.ssl %}
  ssl                  on;
  ssl_certificate /etc/nginx/ssl/certificate.crt;
  ssl_certificate_key /etc/nginx/ssl/cert.rsa;
  {% endif %}
  
  {% if site.sslproxy %}
  location / {
  
    # Pass the request on to Varnish.
    proxy_pass http://appcluster;
  
    # We expect the downsteam servers to redirect to the
    # right hostname, so don't do any rewrites here.
    proxy_redirect             off;
  
    # Pass a bunch of headers to the downstream server
    # so they'll know what's going on.
    proxy_set_header           Host             $host;
    proxy_set_header           X-Real-IP        $remote_addr;
    proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
  
    # Most web apps can be configured to read this header and
    # understand that the current session is actually HTTPS.
    proxy_set_header        X-Forwarded-Proto $scheme;
    add_header              Front-End-Https   on;
  }
  {% endif %}
  
  {% if not site.sslproxy %}
  ## See the blacklist.conf file at the parent dir: /etc/nginx.
  ## Deny access based on the User-Agent header.
  if ($bad_bot) {
    return 444;
  }
  ## Deny access based on the Referer header.
  if ($bad_referer) {
    return 444;
  }
  {% endif %}
  
  {% if site.include_drupal %}
  include conf.d/drupal.conf;
  include conf.d/php_fpm_status.conf;
  {% endif %}
  
  {% if site.cdn %}
  ###
  ### CDN Far Future expiration support.
  ###
  location ^~ /cdn/farfuture/ {
    tcp_nodelay   off;
    access_log    off;
    log_not_found off;
    etag          off;
    gzip_http_version 1.0;
    if_modified_since exact;
    location ~* ^/cdn/farfuture/.+\.(?:css|js|jpe?g|gif|png|ico|bmp|svg|swf|pdf|docx?|xlsx?|pptx?|tiff?|txt|rtf|class|otf|ttf|woff|eot|less)$ {
      expires max;
      add_header Access-Control-Allow-Origin *;
      add_header X-Header "Far Future Generator 2.0 CDN";
      add_header Cache-Control "no-transform, public";
      add_header Last-Modified "Wed, 20 Jan 1988 04:20:42 GMT";
      rewrite ^/cdn/farfuture/[^/]+/[^/]+/(.+)$ /$1 break;
      try_files $uri @redirect;
    }
    location ~* ^/cdn/farfuture/ {
      expires epoch;
      add_header Access-Control-Allow-Origin *;
      add_header X-Header "Far Future Generator 2.1 CDN";
      add_header Cache-Control "private, must-revalidate, proxy-revalidate";
      rewrite ^/cdn/farfuture/[^/]+/[^/]+/(.+)$ /$1 break;
      try_files $uri @redirect;
    }
    try_files $uri @redirect;
  }
  
  ###
  ### Serve & no-log static files & images directly,
  ### without all standard drupal rewrites, php-fpm etc.
  ###
  location ~* ^.+\.(?:css|js|htc|xml|jpe?g|gif|png|ico|bmp|svg|swf|pdf|docx?|xlsx?|pptx?|tiff?|txt|rtf|cgi|bat|pl|dll|aspx?|class|otf|ttf|woff|eot|less)$ {
    expires       30d;
    tcp_nodelay   off;
    access_log    off;
    log_not_found off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    add_header Access-Control-Allow-Origin *;
    add_header X-Header "Static Generator 2.0 CDN";
    try_files $uri @redirect;
  }
  
  ###
  ### Serve & log bigger media/static/archive files directly,
  ### without all standard drupal rewrites, php-fpm etc.
  ###
  location ~* ^.+\.(?:avi|mpe?g|mov|wmv|mp3|mp4|m4a|ogg|ogv|flv|wav|midi|zip|tar|t?gz|rar|dmg|exe)$ {
    expires     30d;
    tcp_nodelay off;
    tcp_nopush  off;
    add_header Access-Control-Allow-Origin *;
    add_header X-Header "Static Generator 2.1 CDN";
    try_files $uri @redirect;
  }
  
  ###
  ### Advagg_css and Advagg_js support.
  ###
  location ~* files/advagg_(?:css|js)/ {
    expires       max;
    etag          off;
    access_log    off;
    log_not_found off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    add_header Cache-Control "no-transform, public";
    add_header Last-Modified "Wed, 20 Jan 1988 04:20:42 GMT";
    add_header Access-Control-Allow-Origin *;
    add_header X-Header "AdvAgg Generator 2.0 CDN";
    try_files $uri @redirect;
  }
  
  location @redirect {
    rewrite ^/(.*)$  {{ site.nocdnhostname }}/$1 permanent;
  }
  {% endif %}
}

{% endfor %}