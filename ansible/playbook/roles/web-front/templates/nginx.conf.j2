user              {{ user }};
worker_processes  {{ worker_processes }};

error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
  ## epoll is preferred on 2.6 Linux
  ## kernels. Cf. http://www.kegel.com/c10k.html#nb.epoll
  use epoll;
  ## Accept as many connections as possible.
  multi_accept on;
}

http {
  ## Get correct ip from X-Forwarded-For as we are behind Varnish
  set_real_ip_from   {{ real_ip_from_varnish }};
  real_ip_header     X-Forwarded-For;

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  index index.htm, index.html, index.php;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main buffer=32k;
  error_log   /var/log/nginx/error.log   info;

  ## Define a zone for limiting the number of simultaneous
  ## connections nginx accepts. 1m means 32000 simultaneous
  ## sessions. We need to define for each server the limit_conn
  ## value refering to this or other zones.
  ## ** This syntax requires nginx version >=
  ## ** 1.1.8. Cf. http://nginx.org/en/CHANGES. If using an older
  ## ** version then use the limit_zone directive below
  ## ** instead. Comment out this
  ## ** one if not using nginx version >= 1.1.8.
  limit_conn_zone $binary_remote_addr zone=arbeit:10m;

  ## Use a SSL/TLS cache for SSL session resume. This needs to be
  ## here (in this context, for session resumption to work. See this
  ## thread on the Nginx mailing list:
  ## http://nginx.org/pipermail/nginx/2010-November/023736.html.
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;
  ## Allow only secure protocols and ciphers
  ssl_protocols  SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:MEDIUM:!aNULL:!MD5:!ADH:!eNULL:!LOW:!EXP;
  ssl_prefer_server_ciphers   on;

  # Enable HSTS;
  add_header Strict-Transport-Security max-age=31536000;

  # Caches information about open FDs, freqently accessed files.
  #open_file_cache           max=200000 inactive=20s;
  #open_file_cache_valid     30s;
  #open_file_cache_min_uses  2;
  #open_file_cache_errors    on;
  # Not compatible with NFS
  open_file_cache         off;

  sendfile                on;
  tcp_nopush              on;
  tcp_nodelay             on;
  client_header_timeout   10;
  client_body_timeout     120;
  send_timeout            120;
  keepalive_timeout       15 10;
  client_max_body_size    100M;
  client_body_buffer_size 128k;

  proxy_buffers 8 16k;
  proxy_buffer_size 32k;

  ## Reset lingering timed out connections. Deflect DDoS.
  reset_timedout_connection on;

  port_in_redirect off;

  merge_slashes off;

  types_hash_max_size 8192;
  server_names_hash_bucket_size 64;

  ## Compression.
  gzip              on;
  gzip_buffers      16 8k;
  gzip_comp_level   3;
  gzip_http_version 1.1;
  gzip_min_length   10;
  gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
  gzip_vary         on;
  gzip_proxied      any; # Compression for all requests.
  ## No need for regexps. See
  ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
  gzip_disable "msie6";

  ## Hide the Nginx version number.
  server_tokens off;

  ## Include mappings for different mappings.
  include conf.d/mappings.conf;

  ## Include the upstream servers for PHP FastCGI handling config.
  include conf.d/upstream_phpcgi.conf;

  {% if loadbalancer %}
  ## Include the upstream servers for load balancing.
  include conf.d/appcluster_upstream.conf;
  {% endif %}
  
  ## Load sites files from the /etc/nginx/sites-enabled directory
  include /etc/nginx/sites-enabled/*;
}