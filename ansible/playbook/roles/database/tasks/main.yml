---
# file: roles/database/tasks/main.yml
  # Create repo
  - name: Create the repository for MariaDB
    copy: src=mariadb.repo dest=/etc/yum.repos.d/mariadb.repo
  # Install packages
  - name: Install mariadb server
    yum: pkg=MariaDB-server state=latest
  - name: Install mariadb client
    yum: pkg=MariaDB-client state=latest
  - name: Install python mysql
    action: yum pkg=MySQL-python state=latest
  - name: Create log directory
    file: state=directory path=/var/log/mysql
  - name: Change the owner and group for the log directory
    file: group=mysql owner=mysql mode=755 state=directory path=/var/log/mysql
  - name: Create /var/log/mysql/mariadb-slow.log file
    action: shell touch /var/log/mysql/mariadb-slow.log
  - name: Change the owner and group for the log file
    file: group=mysql owner=mysql state=file path=/var/log/mysql/mariadb-slow.log
  - name: MariaDB configuration file
    template: src=my.cnf.j2 dest=/etc/my.cnf
    notify:
      - restart mariadb
  - name: Ensure mariadb is running on boot
    service: name=mysql state=running enabled=yes

  # Run mysql_secure_installation
  # 'localhost' needs to be the last item for idempotency, see
  # http://ansible.cc/docs/modules.html#mysql-user
  - name: Update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
    with_items:
      - 127.0.0.1
      - ::1
      - localhost

  - name: Copy .my.cnf file with root password credentials
    template: src=root.my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
  - name: Delete anonymous MySQL server user for {{ server_hostname }}
    action: mysql_user user="" host={{ server_hostname }} state="absent"
  - name: Delete anonymous MySQL server user for localhost
    action: mysql_user user="" state="absent"
  - name: Remove the MySQL test database
    action: mysql_db db=test state=absent

  - name: Setup databases
    mysql_db: name={{ item.key }} state=present
    with_dict: databases

  - name: Setup database users
    mysql_user: name={{ item.value.user }} password={{ item.value.pass }} priv={{ item.key }}.*:ALL state=present
    with_dict: databases

